I"eC<p>Neste artigo, falarei sobre a estrutura do meu blog, um resumo geral de como ele funciona, como faço as publicações, os macetes envolvidos, etc. Recentemente, recebi várias perguntas sobre isso e decidir fazer este artigo para compartilhar isso com você.</p>

<h2 id="sumário">Sumário</h2>

<ul>
  <li>Introdução;</li>
  <li>Resumo da estrutura;</li>
  <li>Resumo sobre o Jekyll;</li>
  <li>Como usar o Github Pages;</li>
  <li>Como configurar seu domínio no Github Pages;</li>
  <li>Como automatizar o build;</li>
  <li>Como configurar HTTPS (via cloudflare);</li>
  <li>Referências;</li>
  <li>Conclusão.</li>
</ul>

<h2 id="introdução">Introdução</h2>

<p>Você deve ter percebido que estou tentando manter uma frequência de pelo menos uma publicação por semana, <a href="/development/2016/11/05/docker-vamos-falar-sobre-virtualizacao.html" target="_blank">veja aqui o artigo da semana passada</a>.</p>

<p>Antes de entrar neste artigo, certifique-se que você já leu o meu outro artigo, <a href="https://leonardorifeli.tech/development/2015/05/06/porque-utilizar-o-jekyll.html" target="_blank"><code class="highlighter-rouge">Porque utilizar o Jekyll</code></a>.</p>

<p>Enfim, vamos direto ao ponto. Falarei sobre a estrutura do meu blog. Um resumo geral de como ele funciona, como faço as publicações, os macetes envolvidos, etc. E também, como você pode fazer algo parecido. Recentemente, recebi várias perguntas sobre isso e decidir fazer este artigo para compartilhar isso com você.</p>

<p>Vou escrevendo este magnífico artigo, enquando escuto o set de <strong><a href="https://www.youtube.com/watch?v=tAP9m2XUqjc" target="_blank">Tech House #023 do Mark Jones</a></strong>.</p>

<h2 id="resumo-da-estrutura">Resumo da estrutura</h2>

<p>Nesto ponto, irei dar um breve resumo do que é utilizado no meu blog e nos próximos tópicos, entrarei em mais detalhes.</p>

<p>Basicamente, meu blog é feito em <a href="https://jekyllrb.com/">Jekyll</a> com um template adaptado. Atualmente, ele está hospedado no Github Pages e possuí uma <a href="https://pt.wikipedia.org/wiki/Content_Delivery_Network" target="_blank"><code class="highlighter-rouge">CDN (Content Delivery Network)</code></a> que neste caso, utilizo o <a href="https://www.cloudflare.com" target="_blank">Cloud Flare</a>.</p>

<p>Mesmo usando o Github Pages, eu configurei meu domínio <code class="highlighter-rouge">leonardorifeli.tech</code> para funcionar com <strong>HTTPs (via Cloud Flare)</strong>. Se você acessar <a href="http://leonardorifeli.github.io" target="_blank"><code class="highlighter-rouge">leonardorifeli.github.io</code></a>, você será redirecionado para <a href="https://leonardorifeli.tech" target="_blank"><code class="highlighter-rouge">leonardorifeli.tech</code> (com HTTPS)</a>.</p>

<p>E para fazer as publicações? O Jekyll funciona com <a href="https://daringfireball.net/projects/markdown/" target="_blank">Markdown</a>, esse foi o ponto principal para a minha adesão ao Jekyll, com isso, eu escrevo os artigos usando Markdown.</p>

<p>No repositório do meu <a href="https://github.com/leonardorifeli/leonardorifeli.github.io" target="_blank">blog</a> existem duas branchs principais, sendo, <code class="highlighter-rouge">gh-pages</code> e <code class="highlighter-rouge">master</code>. Eu automatizei o build (utilizando o <a href="https://github.com/leonardorifeli/leonardorifeli.github.io/blob/gh-pages/.travis.yml" target="_blank">travis</a>), com essa automatização, sempre que é efetuado um push para a branch <code class="highlighter-rouge">gh-pages</code>, ele irá executar o <strong>bash abaixo</strong> e depois que tudo estiver <strong>OK</strong>, é só fazer um PR (Pull Request) da branch <code class="highlighter-rouge">gh-pages</code> para a <code class="highlighter-rouge">master</code> e pronto, está no ar.</p>

<p>Arquivo <strong>.travis.yml</strong>:
<script src="https://gist.github.com/leonardorifeli/47584455fdfc437341d758b89c03096d.js?file=.travis.yml"></script>
<span class="space"> </span></p>

<p>Arquivo <strong>build.sh</strong>:
<script src="https://gist.github.com/leonardorifeli/47584455fdfc437341d758b89c03096d.js?file=bash.sh"></script>
<span class="space"> </span></p>

<p>Salientando que, todos os pushs que eu efetuo, são na branch <code class="highlighter-rouge">gh-pages</code> e não (nunca e jamais) na <code class="highlighter-rouge">master</code>.</p>

<p><strong>Adicional:</strong> Eu utilizo o Jekyll há mais de um ano (você pode conferir mais sobre o Jekyll no meu artigo <a href="https://leonardorifeli.tech/development/2015/05/06/porque-utilizar-o-jekyll.html" target="_blank">Porque utilizar o Jekyll</a>).</p>

<h2 id="resumo-sobre-o-jekyll">Resumo sobre o Jekyll</h2>

<div style="text-align:center">
	<img class="image" src="https://jekyllrb.com/img/logo-2x.png" />
</div>

<p>Jekyll é um gerenciador de códigos estáticos. Isso mesmo, ele não faz uso de banco de dados e não requesita um servidor robusto para funciona. Um dos benefécios é poder utilizar o Github Pages para hospedar o site. Ou seja, você pode desenvolver páginas e até mesmo um blog de forma estática, apenas utilizando HTML (e claro, Markdown) que você provavelmente já conhece. Ele é baseado em vários formatos como Markdown (conforme já dito) para formatação de textos e posts e um padrão de template chamado Liquid com um pouco de <strong>YAML</strong> para os arquivos de configurações.</p>

<p>Você deve ter visto mais no meu artigo sobre, <a href="/development/2015/05/06/porque-utilizar-o-jekyll.html" target="_blank">Porque utilizar o Jekyll</a>. Se não, acesse para conhecer mais detalhes sobre este cara. Salientando que, você irá ler a palavra <strong>Jekyll</strong> demasiadas vezes.</p>

<h2 id="como-usar-o-github-pages">Como usar o Github Pages</h2>

<p>Eu expliquei um pouco, no artigo já mencionado, mas, aqui vai um review.</p>

<iframe width="100%" height="350" src="https://www.youtube.com/embed/2MsN8gpT6jY" frameborder="0" allowfullscreen=""></iframe>
<p><span class="space"> </span></p>

<p>Acesse sua conta no Github, crie um novo repositório com o nome da organização, utilizando o sufixo <code class="highlighter-rouge">.github.io</code>. Exemplo: <code class="highlighter-rouge">leonardorifeli.github.io</code>.</p>

<p>Em seguido acesse a página do repositório, clique em <code class="highlighter-rouge">Settings</code> e depois no box <code class="highlighter-rouge">GitHub Pages</code> clique em <code class="highlighter-rouge">Automatic page generator</code>, na etapa seguinte clique em <code class="highlighter-rouge">Continue to layouts</code>. O próximo passo será selecionar um layout (não se preocupe muito quanto a isso), simplesmente clique em <code class="highlighter-rouge">Publish page</code>.</p>

<p>Você poderá encontrar mais detalhes sobre este tópico no site do <a href="https://pages.github.com/" target="_blank">Github Pages</a>.</p>

<p>Após finalizar você poderá clonar o projeto e substituir os arquivos por algum projeto Jekyll já configurado que você tenha encontrado na internet.</p>

<p>Logo após a configuração, você poderá acessar com <code class="highlighter-rouge">nome-repositorio.github.io</code>. Porém, acredito que você já tenha um domínio e queira que seu blog seja acessível por ele, exemplo, seudominio.com. Chega mais que é o próximo tópico.</p>

<p>Alguns sites para você encontrar temas para Jekyll:</p>

<ul>
  <li><a href="https://github.com/jekyll/jekyll/wiki/Themes" target="_blank">github.com/jekyll/jekyll/wiki/Themes</a>;</li>
  <li><a href="https://github.com/planetjekyll/awesome-jekyll-themes" target="_blank">github.com/planetjekyll/awesome-jekyll-themes</a>;</li>
  <li><a href="http://jekyllthemes.org/" target="_blank">jekyllthemes.org</a>;</li>
  <li><a href="https://jekyllthemes.io/" target="_blank">jekyllthemes.io</a>;</li>
  <li><a href="http://jekyll.tips/templates/" target="_blank">jekyll.tips</a>;</li>
  <li><a href="https://drjekyllthemes.github.io/" target="_blank">drjekyllthemes.github.io</a>.</li>
</ul>

<p><strong>PS.:</strong> você pode criar Github Pages para qualquer repositório. Eu já vi até documentação do projeto, hospedado no Github Pages (pelo repositório do projeto).</p>

<h2 id="como-configurar-seu-domínio-no-github-pages">Como configurar seu domínio no Github Pages</h2>

<p>Esta etapa, eu considero uma das mais tranquilas. Você precisará apenas, configurar algumas entradas DNS no seu domínio e adicionar um arquivo no repositório.</p>

<p>E como fazer isso?</p>

<p>Saliento que, se você for utilizar uma CDN (detalharei nos próximos tópicos), você precisará alterar novamente a zona de DNS do seu domínio, isso impactará apenas em tempo de propagação do DNS.</p>

<p>Vamos ao que interessa, você precisará acessar as configurações das zonas de DNS do seu domínio e configurar algumas entradas, conforme abaixo:</p>

<ul>
  <li>Entrada do tipo A: <code class="highlighter-rouge">192.30.252.153</code></li>
  <li>Entrada do tipo A: <code class="highlighter-rouge">192.30.252.154</code></li>
  <li>Entrada do tipo CNAME: <code class="highlighter-rouge">dominio-do-repositorio.github.io</code></li>
</ul>

<p>Feito isso, agora é moleza, basta criar um arquivo chamado CNAME (em maiúsculo) e dentro deste arquivo, você irá colocar o seu domínio, sem nenhum protocolo ou <strong>www</strong>, apenas o domínio. Exemplo <a href="https://github.com/leonardorifeli/leonardorifeli.github.io/blob/master/CNAME" target="_blank">meu CNAME</a>.</p>

<p>Feito isso, é só esperar propagar.</p>

<p>Alguns links adicionais estão nas referências, aventure-se!</p>

<h2 id="como-automatizar-o-build">Como automatizar o build</h2>

<div style="text-align:center">
	<img class="image" src="https://cdn-images-1.medium.com/max/1200/1*VXdK53mBfr27iT8LiHNAbg.png" />
</div>

<p>Como eu falei, no tópico <strong>Resumo da estrutura</strong>, eu utilizo duas branchs no projeto (gh-pages e master). A branch <strong>master</strong> é a principal do projeto, quando alguém acessar meu blog, o <strong>Github Pages</strong> puxa os arquivos da <strong>master</strong>. Ou seja, sempre que eu faço alterações no blog (incrementais ou novos artigos) eu efetuo o <code class="highlighter-rouge">git push</code> para a <strong>gh-pages</strong> e abro um <strong>PR</strong> (pull request) para a <strong>master</strong>.</p>

<p>Aqui vai uma observação interessante, por <strong>default</strong>, o Github Pages puxa os arquivos da <code class="highlighter-rouge">gh-pages</code>, mas, você pode mudar isso, através das <code class="highlighter-rouge">setting</code> do repositório, conforme a imagem abaixo.</p>

<div style="text-align:center">
	<img class="image" src="/img/posts/2016/11/13/setting-master.png" />
</div>

<p>Mas, a branch default do projeto é a <code class="highlighter-rouge">gh-pages</code>. Isso você pode mudar nas <code class="highlighter-rouge">settings</code> do repositório também.</p>

<p>O travis é um produto do Github para automatização de processos, ele é um <a href="https://en.wikipedia.org/wiki/Continuous_integration" target="_blank">CI</a>. Ele lê o arquivo <strong>.travis.yml</strong> do seu repositório e executa as rotinas específicadas no arquivo.</p>

<p>E como configurar o <a href="https://travis-ci.org/" target="_blank">travis</a>?</p>

<p>É simples, você vai acessar o site do travis, logar com a sua conta do Github e sincronizar todos os seus repositórios. Com isso, você terá uma lista dos repositórios (apenas os repositórios públicos).</p>

<p>Quando você estiver logado, você verá algo como a imagem abaixo, onde poderá habilitar o travis para os repositório e ver um mini tutorial de como automatizar as tarefas com o travis.</p>

<div style="text-align:center">
	<img class="image" src="/img/posts/2016/11/13/travis-build.png" />
</div>

<p>O próximo passo é simples. Como você percebeu na imagem acima, é simples, basta criar um arquivo com o nome <strong>.travis.yml</strong> (onde você especificará o que irá acontecer quando efetuar algum push em alguma branch) e enviá-lo para o repositório.</p>

<p>No meu blog, conforme eu falei no tópico do resumo, eu utilizo o arquivo abaixo, quando é efetuado um <code class="highlighter-rouge">git push</code>, o travis irá executar o arquivo <strong>build.sh</strong>, que irá rodar o comando <code class="highlighter-rouge">$ bundle exec jekyll build</code> para iniciar o build do jekyll.</p>

<p>Arquivo <strong>.travis.yml</strong>:
<script src="https://gist.github.com/leonardorifeli/47584455fdfc437341d758b89c03096d.js?file=.travis.yml"></script>
<span class="space"> </span></p>

<p>Arquivo <strong>build.sh</strong>:
<script src="https://gist.github.com/leonardorifeli/47584455fdfc437341d758b89c03096d.js?file=bash.sh"></script>
<span class="space"> </span></p>

<p>Caso não tenha visto o artigo <a href="/development/2015/05/06/porque-utilizar-o-jekyll.html" target="_blank">Porque utilizar o Jekyll</a>, o comando <code class="highlighter-rouge">$ bundle exec jekyll build</code> irá gerar os arquivos estáticos no diretório <code class="highlighter-rouge">_site</code>.</p>

<p>Com esse build, o travis que irá gerar os arquivos estáticos quando você mergear um <strong>PR</strong> (pull request) da branch <code class="highlighter-rouge">gh-pages</code> para <code class="highlighter-rouge">master</code>. Alguns segundos após o merge, as alterações estarão online.</p>

<h2 id="como-configurar-https">Como configurar https</h2>

<div style="text-align:center">
	<img class="image" src="/img/posts/2016/11/13/cloud-flare.png" />
</div>

<p>Este tópico é um adicional que eu aprendi recentemente, lendo o artigo <a href="https://willianjusten.com.br/https-no-github-pages-com-custom-domain/" target="_blank">HTTPS no Github Pages com Custom Domain</a>, do Willian Justen. Ah, ele tem um <a href="http://willianjusten.teachable.com/p/criando-sites-estaticos-com-jekyll" target="_blank">curso sobre Jekyll</a>, gratuito, corre lá.</p>

<p>Quando eu pesquisei sobre, meu interesse era somente em ter o protocolo HTTPS funcionando e acabei tendo um adicional, uma CDN para otimizar o blog. Coloquei este tópico, apenas para você saber que é possível usar o Github Pages com HTTPS e para configurar você pode ler o <a href="https://willianjusten.com.br/https-no-github-pages-com-custom-domain/" target="_blank">artigo do Willian Justen (aquele que falei logo acima)</a>, eu segui ele e funcionou super bem.</p>

<p>Mas, o que é interessante em ter HTTPS e a CDN?</p>

<p>A <a href="https://webmasters.googleblog.com/2014/08/https-as-ranking-signal.html" target="_blank">Google fez um post</a>, em Agosto/2014, falando que irá utilizar o HTTPS como um elemento para pontuação nas buscas. Mais do que argumentado.</p>

<p>Quanto a CDN, eu não cheguei a medir o quanto tive de ganho. Porém, a Cloud Flare disponibiliza alguns relatórios super interessantes, abaixo mostro alguns.</p>

<div style="text-align:center">
	<img class="image" src="/img/posts/2016/11/13/requests.png" />
	Relatório de requests e arquivos cacheados/não cacheados.
</div>

<div style="text-align:center">
	<img class="image" src="/img/posts/2016/11/13/performance.png" />
	Relatório sobre performance.
</div>

<p>Concluindo, eu adicionei este tópico como um adicional, propondo algo diferente para você utilizar nas páginas que for fazer com Jekyll. O interessante, é que, se for um blog pequeno, como o meu, o plano da Cloud Flare pode ser o gratuito.</p>

<h2 id="referências">Referências</h2>

<ul>
  <li><a href="https://leonardorifeli.tech/development/2015/05/06/porque-utilizar-o-jekyll.html" target="_blank">Leonardo Rifeli - Porque utilizar o Jekyll</a>;</li>
  <li><a href="https://pages.github.com/" target="_blank">Github Pages</a>;</li>
  <li><a href="https://help.github.com/articles/setting-up-an-apex-domain/" target="_blank">Setting up an apex domain</a>;</li>
  <li><a href="https://help.github.com/articles/using-a-custom-domain-with-github-pages" target="_blank">Using a custom domain with Github Pages</a>;</li>
  <li><a href="https://willianjusten.com.br/dominio-proprio-no-github-pages/" target="_blank">Como ter domínio próprio no Github Pages</a>;</li>
  <li><a href="https://docs.travis-ci.com/user/for-beginners" target="_blank">Travis CI for Complete Beginners</a>;</li>
  <li><a href="https://willianjusten.com.br/https-no-github-pages-com-custom-domain/" target="_blank">HTTPS no Github Pages com Custom Domain</a>;</li>
  <li><a href="http://willianjusten.teachable.com/p/criando-sites-estaticos-com-jekyll" target="_blank">Curso do Willian Justen - Criando sites estáticos com Jekyll</a>.</li>
</ul>

<h2 id="conclusão">Conclusão</h2>

<p>A ideia principal é compartilhar com você o que eu aprendi e venho fazendo no meu blog. Espero que este conteúdo lhe auxilie em algo e tenha algum ponto positivo para você.</p>

<p>Obrigado pelo leitura.</p>

<p>Peço que comente sobre o que achou deste artigo, qualquer feedback será importante para o desenvolvimento dos outros artigos.</p>
:ET